{"version":3,"file":"static/js/543.b7e8a186.chunk.js","mappings":"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","sources":["components/ui/Label/Label.js","components/ui/buttons/PrimaryButton.js","components/ui/formik/FormEl.js","components/ui/formik/Input.js","components/ui/formik/ErrorText.js","components/ui/titles/MainTitle.jsx","components/ui/titles/SubTitle.jsx","pages/SignUp/SignUp.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.s};\n  margin-bottom: ${p => p.theme.space.l};\n`;\n","import styled from '@emotion/styled';\nimport { HiOutlineUserAdd } from 'react-icons/hi';\n\nexport const PrimaryButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: ${p => p.theme.space.ml};\n  margin-top: ${p => p.theme.space.l};\n  font-size: ${p => p.theme.fontSizes.m};\n  border: none;\n  border-radius: ${p => p.theme.radii.small};\n  background-color: #d6e0ecd0;\n  box-shadow: 5px 5px 10px 0px rgba(149, 167, 173, 1);\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${p => p.theme.colors.accentColor};\n  }\n`;\n\nexport const PrimaryButtonIcon = styled(HiOutlineUserAdd)`\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n`;\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: center;\n  margin-bottom: 30px;\n  padding-top: 10px;\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  padding: ${p => p.theme.space.m};\n  border-radius: ${p => p.theme.radii.small};\n  height: 30px;\n  width: 400px;\n  color: ${p => p.theme.colors.primaryColor};\n  font-family: inherit;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.s};\n  border: none;\n  box-shadow: 5px 5px 10px 0px rgba(149, 167, 173, 1);\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 2px solid ${p => p.theme.colors.accentColor};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ErrorText = styled.p`\n  color: red;\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledMainTitle = styled.h1`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.xl};\n  margin-bottom: ${p => p.theme.space.l};\n  color: ${p => p.theme.colors.accentColor};\n`;\n\nexport const MainTitle = ({ title }) => {\n  return <StyledMainTitle>{title}</StyledMainTitle>;\n};\n","import styled from '@emotion/styled';\n\nexport const StyledSubTitle = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.l};\n  margin-bottom: ${p => p.theme.space.l};\n  color: ${p => p.theme.colors.accentColor};\n`;\n\nexport const SubTitle = ({ title }) => {\n  return <StyledSubTitle>{title}</StyledSubTitle>;\n};\n","import * as yup from 'yup';\nimport { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport { ErrorText, FormEl, Input } from 'components/ui/formik';\nimport { Label } from 'components/ui/Label/Label';\nimport { PrimaryButton } from 'components/ui/buttons/PrimaryButton';\nimport { SubTitle } from 'components/ui/titles';\nimport operations from 'redux/auth/authOperations';\nimport { Box } from 'styles/Box';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(5).required(),\n});\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const user = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n    dispatch(operations.register(user));\n    resetForm();\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      // p=\"ml\"\n      // m=\"0px auto\"\n      // backgroundColor=\"secondaryColorBlue\"\n      // width=\"100%\"\n      // minHeight=\"100vh\"\n    >\n      <SubTitle title=\"For creating youre own contacts please register\" />\n\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n        autoComplete=\"off\"\n      >\n        <FormEl>\n          <Label>\n            Name:\n            <Input type=\"text\" name=\"name\" />\n            <FormError name=\"name\" />\n          </Label>\n\n          <Label>\n            Email:\n            <Input type=\"email\" name=\"email\" />\n            <FormError name=\"email\" />\n          </Label>\n\n          <Label>\n            Password:\n            <Input type=\"password\" name=\"password\" />\n            <FormError name=\"password\" />\n          </Label>\n\n          <PrimaryButton type=\"submit\">SignUp</PrimaryButton>\n        </FormEl>\n      </Formik>\n    </Box>\n  );\n};\n\nexport default SignUp;\n"],"names":["Label","styled","p","theme","fontWeights","normal","fontSizes","s","space","l","PrimaryButton","ml","m","radii","small","colors","accentColor","PrimaryButtonIcon","HiOutlineUserAdd","FormEl","Form","Input","Field","primaryColor","ErrorText","StyledMainTitle","bold","xl","MainTitle","title","StyledSubTitle","SubTitle","schema","yup","shape","name","required","email","password","min","FormError","render","message","dispatch","useDispatch","display","flexDirection","alignItems","initialValues","validationSchema","onSubmit","values","resetForm","user","operations","autoComplete","type"],"sourceRoot":""}