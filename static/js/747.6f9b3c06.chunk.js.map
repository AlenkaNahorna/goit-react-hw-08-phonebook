{"version":3,"file":"static/js/747.6f9b3c06.chunk.js","mappings":"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","sources":["components/ui/Label/Label.js","components/ui/buttons/PrimaryButton.js","components/ui/formik/FormEl.js","components/ui/formik/Input.js","components/ui/formik/ErrorText.js","api/fetchContacts.js","redux/contactsSlice.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.s};\n  margin-bottom: ${p => p.theme.space.l};\n`;\n","import styled from '@emotion/styled';\nimport { HiOutlineUserAdd } from 'react-icons/hi';\n\nexport const PrimaryButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: ${p => p.theme.space.ml};\n  margin-top: ${p => p.theme.space.l};\n  font-size: ${p => p.theme.fontSizes.m};\n  border: none;\n  border-radius: ${p => p.theme.radii.small};\n  background-color: #d6e0ecd0;\n  box-shadow: 5px 5px 10px 0px rgba(149, 167, 173, 1);\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${p => p.theme.colors.accentColor};\n  }\n`;\n\nexport const PrimaryButtonIcon = styled(HiOutlineUserAdd)`\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n`;\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: center;\n  margin-bottom: 30px;\n  padding-top: 10px;\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  padding: ${p => p.theme.space.m};\n  border-radius: ${p => p.theme.radii.small};\n  height: 30px;\n  width: 400px;\n  color: ${p => p.theme.colors.primaryColor};\n  font-family: inherit;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.s};\n  border: none;\n  box-shadow: 5px 5px 10px 0px rgba(149, 167, 173, 1);\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 2px solid ${p => p.theme.colors.accentColor};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ErrorText = styled.p`\n  color: red;\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const fetchAllContacts = async () => {\n  return await axios.get('/contacts').then(response => response.data);\n};\n\nexport const fetchAddContact = async contact => {\n  return await axios.post('/contacts', contact).then(response => response.data);\n};\n\nexport const fetchDeleteContact = async id => {\n  return await axios.delete(`/contacts/${id}`).then(() => id);\n};\n\nexport const fetchEditContact = async ({ id, name, number }) => {\n  return await axios\n    .patch(`/contacts/${id}`, { name, number })\n    .then(response => response.data);\n};\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport {\n  fetchAddContact,\n  fetchAllContacts,\n  fetchDeleteContact,\n  fetchEditContact,\n} from 'api/fetchContacts';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const data = await fetchAllContacts();\n      return data;\n    } catch (error) {\n      toast.error('Oops, something went wrong!');\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const addItem = createAsyncThunk(\n  'contacts/addItem',\n  async (contact, { rejectWithValue }) => {\n    try {\n      await fetchAddContact(contact);\n      const data = await fetchAddContact();\n      toast.success('Contact added!');\n      return data;\n    } catch (error) {\n      toast.error('Oops, something went wrong!');\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const deleteItem = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      await fetchDeleteContact(id);\n      const data = await fetchAllContacts();\n      toast.success('Contact deleted!');\n      return data;\n    } catch (error) {\n      toast.error('Contact not found!');\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const editItem = createAsyncThunk(\n  'contacts/editContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      await fetchEditContact(contact);\n      const data = await fetchAllContacts();\n      toast.success('Contact edited!');\n      return data;\n    } catch (error) {\n      toast.error('Contact not found!');\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    filter: '',\n  },\n  reducers: {\n    filterItems: (state, action) => {\n      return { ...state, filter: action.payload };\n    },\n  },\n  extraReducers: {\n    [fetchContacts.fulfilled](state, action) {\n      state.items = [...action.payload];\n    },\n\n    [addItem.fulfilled](state, action) {\n      state.items = [...action.payload];\n    },\n\n    [deleteItem.fulfilled](state, action) {\n      state.items = [...action.payload];\n    },\n\n    [editItem.fulfilled](state, action) {\n      state.items = [...action.payload];\n    },\n  },\n});\n\nexport const { filterItems } = contactsSlice.actions;\n\nexport const getContact = state => state.contacts.items;\nexport const getFilterWord = state => state.contacts.filter;\n\nexport const contactsReducer = contactsSlice.reducer;\n","import styled from '@emotion/styled';\n\nexport const FilterInput = styled.input`\n  margin-bottom: ${p => p.theme.space.l};\n  padding: ${p => p.theme.space.m};\n  border-radius: ${p => p.theme.radii.small};\n  height: 30px;\n  width: 400px;\n  color: ${p => p.theme.colors.primaryColor};\n  font-family: inherit;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.s};\n  border: none;\n  box-shadow: 5px 5px 10px 0px rgba(149, 167, 173, 1);\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 2px solid ${p => p.theme.colors.accentColor};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterItems, getFilterWord } from 'redux/contactsSlice';\nimport { Label } from 'components/ui/Label/Label';\nimport { FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterWord);\n\n  return (\n    <Label>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"name\"\n        onChange={e => dispatch(filterItems(e.currentTarget.value))}\n        value={filter}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContactsListItem = styled.li`\n  width: 400px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${p => p.theme.space.m};\n  margin-bottom: ${p => p.theme.space.ml};\n`;\n\nexport const ContactsListText = styled.p`\n  margin: 0 ${p => p.theme.space.l};\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  deleteItem,\n  getContact,\n  getFilterWord,\n  fetchContacts,\n} from 'redux/contactsSlice';\nimport {\n  ContactsList,\n  ContactsListItem,\n  ContactsListText,\n} from './ContactList.styled';\nimport {\n  SecondaryButton,\n  SecondaryButtonIcon,\n} from 'components/ui/buttons/SecondaryButton';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const items = useSelector(getContact);\n  const filter = useSelector(getFilterWord);\n\n  const normalizedValue = filter.toLowerCase();\n  const filteredContacts = items.filter(option =>\n    option.name.toLowerCase().includes(normalizedValue)\n  );\n\n  const deleteContact = contactId => {\n    dispatch(deleteItem(contactId));\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsList>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactsListItem key={id}>\n          {name}: <ContactsListText>{number}</ContactsListText>\n          <SecondaryButton\n            type=\"button\"\n            onClick={() => {\n              deleteContact(id);\n            }}\n          >\n            <SecondaryButtonIcon />\n            Delate\n          </SecondaryButton>\n        </ContactsListItem>\n      ))}\n    </ContactsList>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import * as yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { Formik, ErrorMessage } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { addItem, getContact } from 'redux/contactsSlice';\nimport { Label } from 'components/ui/Label/Label';\nimport {\n  PrimaryButton,\n  PrimaryButtonIcon,\n} from 'components/ui/buttons/PrimaryButton';\nimport { ErrorText, FormEl, Input } from 'components/ui/formik';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup\n    .number()\n    .required()\n    .test({\n      test: value => /^[\\d+][\\d()-]{4,14}\\d$/i.test(value),\n    }),\n});\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(getContact);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const newContact = {\n      id: nanoid(6),\n      name: values.name,\n      number: values.number,\n    };\n    if (\n      items.find(item =>\n        item.name.toLowerCase().includes(newContact.name.toLowerCase())\n      )\n    ) {\n      toast.info(`${newContact.name} is already in contact`);\n      return;\n    } else {\n      dispatch(addItem(newContact));\n    }\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormEl>\n        <Label>\n          Name:\n          <Input type=\"text\" name=\"name\" />\n          <FormError name=\"name\" />\n        </Label>\n        <Label>\n          Number:\n          <Input type=\"tel\" name=\"number\" />\n          <FormError name=\"number\" />\n        </Label>\n\n        <PrimaryButton type=\"submit\">\n          <PrimaryButtonIcon />\n          Add contact\n        </PrimaryButton>\n      </FormEl>\n    </Formik>\n  );\n};\n","import { Box } from 'styles/Box';\n// import { AddContactForm } from 'components/AddContactForm/AddContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nconst Contacts = () => {\n  return (\n    <Box display=\"flex\" align-items=\"center\" flex-direction=\"column\">\n      <ContactForm />\n      <div>\n        <Filter />\n        <ContactList />\n      </div>\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["Label","styled","p","theme","fontWeights","normal","fontSizes","s","space","l","PrimaryButton","ml","m","radii","small","colors","accentColor","PrimaryButtonIcon","HiOutlineUserAdd","FormEl","Form","Input","Field","primaryColor","ErrorText","axios","fetchAllContacts","then","response","data","fetchAddContact","contact","fetchDeleteContact","id","fetchEditContact","name","number","fetchContacts","createAsyncThunk","_","rejectWithValue","toast","addItem","deleteItem","editItem","contactsSlice","createSlice","initialState","items","filter","reducers","filterItems","state","action","payload","extraReducers","fulfilled","actions","getContact","contacts","getFilterWord","reducer","FilterInput","Filter","dispatch","useDispatch","useSelector","type","onChange","e","currentTarget","value","ContactsList","ContactsListItem","ContactsListText","ContactList","normalizedValue","toLowerCase","filteredContacts","option","includes","useEffect","map","SecondaryButton","onClick","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","schema","yup","shape","required","test","FormError","render","message","ContactForm","initialValues","validationSchema","onSubmit","values","resetForm","newContact","find","item","Box","display"],"sourceRoot":""}