{"version":3,"file":"static/js/98.6119bc4c.chunk.js","mappings":"qLAEaA,E,QAAQC,EAAAA,MAAH,oIAGD,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,YAAYC,UAC3B,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,KACnB,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,MAAMC,M,yFCJzBC,EAAgBT,EAAAA,EAAAA,OAAH,4VAIb,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,MAAMG,MAChB,SAAAT,GAAC,OAAIA,EAAEC,MAAMK,MAAMC,KACpB,SAAAP,GAAC,OAAIA,EAAEC,MAAMG,UAAUM,KAEnB,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,MAAMC,SAMd,SAAAZ,GAAC,OAAIA,EAAEC,MAAMY,OAAOC,gBAIXf,EAAAA,EAAAA,GAAOgB,EAAAA,IAAPhB,CAAH,iF,2IClBjBiB,GAASjB,EAAAA,EAAAA,GAAOkB,EAAAA,GAAPlB,CAAH,sKCANmB,GAAQnB,EAAAA,EAAAA,GAAOoB,EAAAA,GAAPpB,CAAH,yUACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,MAAMI,KACb,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,MAAMC,SAG3B,SAAAZ,GAAC,OAAIA,EAAEC,MAAMY,OAAOO,gBAEd,SAAApB,GAAC,OAAIA,EAAEC,MAAMC,YAAYC,UAC3B,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,KAMd,SAAAL,GAAC,OAAIA,EAAEC,MAAMY,OAAOC,eCf/BO,EAAYtB,EAAAA,EAAAA,EAAH,0DAEP,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,UAAUM,M,8GCMhCY,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGF,aAE1BG,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAAC,IAAD,UAAYA,QAsCrC,UAjCc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEV,MAAO,GAAIE,SAAU,IACtCS,iBAAkBd,EAClBe,SATiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BN,EAASO,EAAAA,EAAAA,MAAiBF,IAC1BC,KAIA,UAKE,UAAC,KAAD,YACE,UAAC,IAAD,CAAOE,QAAQ,QAAf,oBAEE,SAAC,KAAD,CAAOC,KAAK,QAAQZ,KAAK,WACzB,SAACD,EAAD,CAAWC,KAAK,cAGlB,UAAC,IAAD,CAAOW,QAAQ,WAAf,uBAEE,SAAC,KAAD,CAAOC,KAAK,WAAWZ,KAAK,cAC5B,SAACD,EAAD,CAAWC,KAAK,iBAGlB,SAAC,IAAD,CAAeY,KAAK,SAApB","sources":["components/ui/Label/Label.js","components/ui/buttons/PrimaryButton.js","components/ui/formik/FormEl.js","components/ui/formik/Input.js","components/ui/formik/ErrorText.js","pages/LogIn/LogIn.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.s};\n  margin-bottom: ${p => p.theme.space.l};\n`;\n","import styled from '@emotion/styled';\nimport { HiOutlineUserAdd } from 'react-icons/hi';\n\nexport const PrimaryButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: ${p => p.theme.space.ml};\n  margin-top: ${p => p.theme.space.l};\n  font-size: ${p => p.theme.fontSizes.m};\n  border: none;\n  border-radius: ${p => p.theme.radii.small};\n  background-color: #d6e0ecd0;\n  box-shadow: 5px 5px 10px 0px rgba(149, 167, 173, 1);\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${p => p.theme.colors.accentColor};\n  }\n`;\n\nexport const PrimaryButtonIcon = styled(HiOutlineUserAdd)`\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n`;\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: center;\n  margin-bottom: 30px;\n  padding-top: 10px;\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  padding: ${p => p.theme.space.m};\n  border-radius: ${p => p.theme.radii.small};\n  height: 30px;\n  width: 400px;\n  color: ${p => p.theme.colors.primaryColor};\n  font-family: inherit;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.s};\n  border: none;\n  box-shadow: 5px 5px 10px 0px rgba(149, 167, 173, 1);\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 2px solid ${p => p.theme.colors.accentColor};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ErrorText = styled.p`\n  color: red;\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n","import * as yup from 'yup';\nimport { Formik, ErrorMessage } from 'formik';\n// import { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport operations from 'redux/auth/authOperations';\n\nimport { Label } from 'components/ui/Label/Label';\nimport { PrimaryButton } from 'components/ui/buttons/PrimaryButton';\nimport { ErrorText, FormEl, Input } from 'components/ui/formik';\n\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(5).required(),\n});\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconst LogIn = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(operations.logIn(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormEl>\n        <Label htmlFor=\"email\">\n          Email:\n          <Input type=\"email\" name=\"email\" />\n          <FormError name=\"email\" />\n        </Label>\n\n        <Label htmlFor=\"password\">\n          Password:\n          <Input type=\"password\" name=\"password\" />\n          <FormError name=\"password\" />\n        </Label>\n\n        <PrimaryButton type=\"submit\">LogIn</PrimaryButton>\n      </FormEl>\n    </Formik>\n  );\n};\n\nexport default LogIn;\n"],"names":["Label","styled","p","theme","fontWeights","normal","fontSizes","s","space","l","PrimaryButton","ml","m","radii","small","colors","accentColor","HiOutlineUserAdd","FormEl","Form","Input","Field","primaryColor","ErrorText","schema","yup","shape","email","required","password","min","FormError","name","render","message","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","operations","htmlFor","type"],"sourceRoot":""}